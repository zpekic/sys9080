   1:				;---------------------------------------------------------------------------
   2:				; Anvyl hex kbd and TFT display test/demo  https://github.com/zpekic/sys9080
   3:				; 		(c) zpekic@hotmail.com - 2017, 2018
   4:				;---------------------------------------------------------------------------
   5:				
   6:				include ./sys9080.asm
**** ./sys9080.asm ****
   1:				;--------------------------------------------------------------------------
   2:				; Common definitions for  Sys9080 project https://github.com/zpekic/sys9080
   3:				; 		(c) zpekic@hotmail.com - 2017, 2018
   4:				;--------------------------------------------------------------------------
   5:     -	0010          	ACIA0_STATUS	EQU 0x10; status read-only
   6:     -	0011          	ACIA0_DATA	EQU 0x11; data send/receive
   7:     -	0012          	ACIA1_STATUS	EQU 0x12; status read-only
   8:     -	0013          	ACIA1_DATA	EQU 0x13; data send/receive
   9:     -	0000          	PORT0		EQU 0x00; switches when reading, LEDs when writing
  10:     -	0001          	PORT1		EQU 0x01; buttons (3..0) when reading, LEDs when writing
  11:     -	0007          	PORT_COL	EQU 0x07; hex key colums 3..0 when writing
  12:     -	0007          	PORT_ROW	EQU 0x07; hex key rows 3..0 when reading
  13:     -	0001          	MASK_VALID	EQU 0x01; fields in UART status register
  14:     -	0002          	MASK_READY	EQU 0x02;
  15:     -	0040          	MASK_ERROR	EQU 0x40;
  16:     -	0080          	MASK_INTREQ	EQU 0x80;
  17:				
  18:     -	0001          	MASK_BUTTON0	EQU 0x01;
  19:     -	0002          	MASK_BUTTON1	EQU 0x02;
  20:     -	0004          	MASK_BUTTON2	EQU 0x04;
  21:     -	0008          	MASK_BUTTON3	EQU 0x08;
  22:     -	0001          	MASK_SW0	EQU 0x01;
  23:     -	0002          	MASK_SW1	EQU 0x02;
  24:     -	0004          	MASK_SW2	EQU 0x04;
  25:     -	0008          	MASK_SW3	EQU 0x08;
  26:     -	0010          	MASK_SW4	EQU 0x10;
  27:     -	0020          	MASK_SW5	EQU 0x20;
  28:     -	0040          	MASK_SW6	EQU 0x40;
  29:     -	0080          	MASK_SW7	EQU 0x80;
  30:				
  31:				;-------------------------------------------------------------
  32:     -	0400          	AltMon		EQU 0x0400; Altmon is org'd to this location
  33:				
  34:				;-------------------------------------------------------------
  35:     -	0C00          	VdpRam		EQU 0x0C00; text video memory, 512b
  36:     -	0DFE          	VdpFgColor	EQU VdpRam + 0x1FE	;write only, RRRGGGBB
  37:     -	0DFF          	VdpBkColor	EQU VdpRam + 0x1FF	;write only, RRRGGGBB
  38:     -	0DFE          	VdpCols		EQU VdpRam + 0x1FE	;read only, should be 30
  39:     -	0DFF          	VdpRows		EQU VdpRam + 0x1FF	;read only, should be 17
  40:     -	FE00          	RamBottom	EQU 0xFE00
  41:     -	FF80          	Heap		EQU RamBottom + 0x0180
  42:     -	FF80          	Temp_PC		EQU Heap; can't use DW because the hex file maps to ROM only
  43:     -	FF82          	CursorCol	EQU Heap + 2
  44:     -	FF83          	CursorRow	EQU Heap + 3
  45:				
  46:				;Some ASCII codes with special handling during PrintCharText
  47:     -	0010          	CS 	EQU 16  ;CS: Clear Screen      
  48:     -	0001          	HM 	EQU 1   ;HM: HoMe cursor       
  49:     -	000D          	NL 	EQU 13  ;NL: New Line
  50:     -	000D          	CR 	EQU 13  ;CR: Carriage return == NL       
  51:     -	000A          	LF 	EQU 10  ;LF: Line Feed       
  52:     -	0003          	ML 	EQU  3  ;ML: Move cursor Left          
  53:     -	0004          	MR 	EQU  4  ;MR: Move cursor Right         
  54:     -	0005          	MU 	EQU  5  ;MU: Move cursor Up          
  55:     -	0006          	MD 	EQU  6  ;MD: Move cursor Down
  56:     -	0009          	TB 	EQU  9  ;TB: TaB        
  57:     -	0008          	BS 	EQU  8  ;BS: BackSpace  
**** PrintChar.asm ****
   7:				
   8:     -	8000          			.ORG 0x8000
   9:				
  10:    0+7	8000  3E01    			MVI A, HM
  11:    7+17	8002  CD3280  			CALL DisplayChar
  12:   24+10	8005  216F81  	KbdScan:	LXI H, KeyMap
  13:   34+7	8008  0EFE    			MVI C, 0xFE
  14:   41+7	800A  16FE    	ColLoop:	MVI D, 0xFE
  15:   48+5	800C  79      			MOV A, C
  16:   53+10	800D  D307    			OUT PORT_COL
  17:   63+10	800F  DB07    	RowLoop:	IN PORT_ROW
  18:   73+4	8011  BA      			CMP D
  19:   77+10	8012  C21E80  			JNZ NotPressed
  20:   87+4	8015  00      			NOP;RST 6
  21:   91+7	8016  7E      			MOV A, M
  22:   98+4	8017  B7      			ORA A
  23:  102+10	8018  CA0004  			JZ AltMon
  24:  112+17	801B  CD3280  			CALL DisplayChar
  25:  129+5	801E  23      	NotPressed:	INX H
  26:  134+5	801F  7A      			MOV A, D
  27:  139+4	8020  07      			RLC
  28:  143+5	8021  57      			MOV D, A
  29:  148+7	8022  FEEF    			CPI 0xEF
  30:  155+10	8024  C20F80  			JNZ RowLoop
  31:  165+5	8027  79      			MOV A, C
  32:  170+4	8028  07      			RLC
  33:  174+5	8029  4F      			MOV C, A
  34:  179+7	802A  FEEF    			CPI 0xEF
  35:  186+10	802C  C20A80  			JNZ ColLoop
  36:  196+10	802F  CA0580  			JZ KbdScan
  37:				
  38:  206+11	8032  E5      	DisplayChar:	PUSH H
  39:  217+11	8033  D5      			PUSH D
  40:  228+11	8034  C5      			PUSH B
  41:  239+11	8035  F5      			PUSH PSW
  42:  250+7	8036  FE10    			CPI CS
  43:  257+10	8038  CAB480  			JZ ClearScreen
  44:  267+7	803B  FE01    			CPI HM
  45:  274+10	803D  CAC480  			JZ HomeScreen
  46:  284+7	8040  FE0D    			CPI CR	;CR and LF are handled the same
  47:  291+10	8042  CACD80  			JZ CrLf
  48:  301+7	8045  FE0A    			CPI LF	
  49:  308+10	8047  CACD80  			JZ CrLf
  50:  318+7	804A  FE03    			CPI ML	;Move cursor Left 
  51:  325+10	804C  CA6F80  			JZ MoveLeft         
  52:  335+7	804F  FE04    			CPI MR	;Move cursor Right
  53:  342+10	8051  CA6780  			JZ MoveRight         
  54:  352+7	8054  FE05    			CPI MU	;Move cursor Up
  55:  359+10	8056  CA9F80  			JZ MoveUp          
  56:  369+7	8059  FE06    			CPI MD	;Move cursor Down
  57:  376+10	805B  CA8680  			JZ MoveDown
  58:						;CPI BS	;BackSpace  
  59:  386+11	805E  F5      			PUSH PSW
  60:  397+4	805F  00      			NOP;
  61:  401+4	8060  00      			NOP;
  62:  405+4	8061  00      			NOP;RST 6
  63:  409+17	8062  CDDA80  			CALL GetCursorAddr
  64:  426+10	8065  F1      			POP PSW
  65:  436+7	8066  77      			MOV M, A
  66:  443+17	8067  CDF880  	MoveRight:	CALL AdvanceCursor
  67:  460+10	806A  F1      	RestoreRegs:	POP PSW
  68:  470+10	806B  C1      			POP B
  69:  480+10	806C  D1      			POP D
  70:  490+10	806D  E1      			POP H
  71:  500+10	806E  C9      			RET
  72:				
  73:  510+16	806F  2AFE0D  	MoveLeft:	LHLD VdpCols
  74:  526+5	8072  EB      			XCHG
  75:  531+16	8073  2A82FF  			LHLD CursorCol
  76:  547+5	8076  2D      			DCR L
  77:  552+10	8077  F2C780  			JP SetCursor
  78:  562+5	807A  6B      			MOV L, E
  79:  567+5	807B  2D      			DCR L
  80:  572+5	807C  25      			DCR H
  81:  577+10	807D  F2C780  			JP SetCursor
  82:  587+17	8080  CD4081  			CALL ScrollDown
  83:  604+10	8083  C3C480  			JMP HomeScreen
  84:				
  85:  614+16	8086  2AFE0D  	MoveDown:	LHLD VdpCols
  86:  630+5	8089  EB      			XCHG
  87:  635+16	808A  2A82FF  			LHLD CursorCol
  88:  651+5	808D  24      			INR H
  89:  656+5	808E  7C      			MOV A, H
  90:  661+4	808F  BA      			CMP D
  91:  665+10	8090  DAC780  			JC SetCursor
  92:  675+17	8093  CD1281  			CALL ScrollUp
  93:  692+16	8096  2AFE0D  			LHLD VdpCols
  94:  708+5	8099  25      			DCR H
  95:  713+7	809A  2E00    			MVI L, 0x00
  96:  720+10	809C  C3C780  			JMP SetCursor
  97:				
  98:  730+16	809F  2AFE0D  	MoveUp:		LHLD VdpCols
  99:  746+5	80A2  EB      			XCHG
 100:  751+16	80A3  2A82FF  			LHLD CursorCol
 101:  767+5	80A6  25      			DCR H
 102:  772+10	80A7  F2C780  			JP SetCursor
 103:  782+11	80AA  E5      			PUSH H
 104:  793+17	80AB  CD4081  			CALL ScrollDown
 105:  810+10	80AE  E1      			POP H
 106:  820+7	80AF  2600    			MVI H, 0x00
 107:  827+10	80B1  C3C780  			JMP SetCursor
 108:						
 109:  837+10	80B4  21000C  	ClearScreen:	LXI H, VdpRam
 110:  847+10	80B7  01FE01  			LXI B, 17*30
 111:  857+7	80BA  3E20    	ClearChar:	MVI A, ' '
 112:  864+7	80BC  77      			MOV M, A
 113:  871+5	80BD  23      			INX H
 114:  876+5	80BE  0B      			DCX B
 115:  881+5	80BF  79      			MOV A, C
 116:  886+4	80C0  B0      			ORA B
 117:  890+10	80C1  C2BA80  			JNZ ClearChar
 118:  900+10	80C4  210000  	HomeScreen:	LXI H, 0x0000
 119:  910+16	80C7  2282FF  	SetCursor:	SHLD CursorCol
 120:  926+10	80CA  C36A80  			JMP RestoreRegs
 121:				
 122:  936+13	80CD  3AFE0D  	CrLf:		LDA VdpCols
 123:  949+5	80D0  3D      			DCR A
 124:  954+13	80D1  3282FF  			STA CursorCol	
 125:  967+17	80D4  CDF880  			CALL AdvanceCursor
 126:  984+10	80D7  C36A80  			JMP RestoreRegs
 127:				
 128:  994+16	80DA  2A82FF  	GetCursorAddr:	LHLD CursorCol	;HL = CursorRow CursorCol
 129: 1010+5	80DD  4C      			MOV C, H
 130: 1015+7	80DE  2600    			MVI H, 0x00
 131: 1022+10	80E0  11000C  			LXI D, VdpRam
 132: 1032+10	80E3  19      			DAD D		;HL = VdpRam + CursorCol
 133: 1042+13	80E4  3AFE0D  			LDA VdpCols
 134: 1055+5	80E7  5F      			MOV E, A
 135: 1060+7	80E8  1600    			MVI D, 0x00	;DE = Cols
 136: 1067+5	80EA  79      	NextRow:	MOV A, C	;A = CursorRow
 137: 1072+4	80EB  B1      			ORA C
 138: 1076+5+6	80EC  C8      			RZ
 139: 1081+10	80ED  19      			DAD D
 140: 1091+5	80EE  0D      			DCR C
 141: 1096+5	80EF  7D      			MOV A, L
 142: 1101+10	80F0  D300    			OUT PORT0
 143: 1111+5	80F2  7C      			MOV A, H
 144: 1116+10	80F3  D301    			OUT PORT1
 145: 1126+10	80F5  C3EA80  			JMP NextRow 
 146:						
 147: 1136+10	80F8  21FE0D  	AdvanceCursor:	LXI H, VdpCols
 148: 1146+13	80FB  3A82FF  			LDA CursorCol
 149: 1159+5	80FE  3C      			INR A
 150: 1164+13	80FF  3282FF  			STA CursorCol
 151: 1177+7	8102  BE      			CMP M
 152: 1184+5+6	8103  D8      			RC
 153: 1189+4	8104  AF      			XRA A
 154: 1193+13	8105  3282FF  			STA CursorCol	;CursorCol = 0
 155: 1206+5	8108  23      			INX H		;points to VdpRows
 156: 1211+13	8109  3A83FF  			LDA CursorRow
 157: 1224+5	810C  3C      			INR A
 158: 1229+13	810D  3283FF  			STA CursorRow
 159: 1242+7	8110  BE      			CMP M
 160: 1249+5+6	8111  D8      			RC
 161:						; continue with scroll up
 162: 1254+4	8112  00      	ScrollUp:	NOP;RST 6	
 163: 1258+10	8113  01E001  			LXI B, 16*30	;replace with dynamic calculation	
 164: 1268+16	8116  2AFE0D  			LHLD VdpCols
 165: 1284+7	8119  2600    			MVI H, 0x00	;HL = VdpCols
 166: 1291+10	811B  11000C  			LXI D, VdpRam
 167: 1301+10	811E  19      			DAD D		;HL = VdpCols + VdpRam, DE = VdpRam
 168: 1311+7	811F  7E      	CopyNextChar:	MOV A, M
 169: 1318+7	8120  12      			STAX D		;(DE) <= (HL)
 170: 1325+5	8121  23      			INX H
 171: 1330+5	8122  13      			INX D
 172: 1335+5	8123  79      			MOV A, C
 173: 1340+4	8124  B0      			ORA B
 174: 1344+10	8125  CA2C81  			JZ ClearLastLine
 175: 1354+5	8128  0B      			DCX B
 176: 1359+10	8129  C31F81  			JMP CopyNextChar
 177: 1369+4	812C  00      	ClearLastLine:	NOP;RST 6
 178: 1373+7	812D  3E20    			MVI A, ' '
 179: 1380+16	812F  2AFE0D  			LHLD VdpCols
 180: 1396+7	8132  12      	ClearLastLC:	STAX D
 181: 1403+5	8133  13      			INX D
 182: 1408+5	8134  2D      			DCR L
 183: 1413+10	8135  C23281  			JNZ ClearLastLC
 184: 1423+13	8138  3AFF0D  			LDA VdpRows
 185: 1436+5	813B  3D      			DCR A
 186: 1441+13	813C  3283FF  	SetCursorRow:	STA CursorRow
 187: 1454+10	813F  C9      			RET
 188:				
 189: 1464+10	8140  01E001  	ScrollDown:	LXI B, 16*30
 190: 1474+10	8143  21000C  			LXI H, VdpRam
 191: 1484+10	8146  09      			DAD B
 192: 1494+5	8147  EB      			XCHG	;DE = source
 193: 1499+16	8148  2AFE0D  			LHLD VdpCols
 194: 1515+5	814B  7B      			MOV A, E
 195: 1520+4	814C  85      			ADD L
 196: 1524+5	814D  6F      			MOV L, A
 197: 1529+5	814E  7A      			MOV A, D
 198: 1534+7	814F  CE00    			ACI 0x00
 199: 1541+5	8151  67      			MOV H, A;HL = dest
 200: 1546+7	8152  1A      	CopyPrevChar:	LDAX D
 201: 1553+7	8153  77      			MOV M, A
 202: 1560+5	8154  2B      			DCX H
 203: 1565+5	8155  1B      			DCX D
 204: 1570+5	8156  79      			MOV A, C
 205: 1575+4	8157  B0      			ORA B
 206: 1579+10	8158  CA5F81  			JZ ClearFirstLine
 207: 1589+5	815B  0B      			DCX B
 208: 1594+10	815C  C35281  			JMP CopyPrevChar
 209: 1604+11	815F  F7      	ClearFirstLine:	RST 6
 210: 1615+7	8160  3E20    			MVI A, ' '
 211: 1622+16	8162  2AFE0D  			LHLD VdpCols
 212: 1638+7	8165  12      	ClearFirstLC:	STAX D
 213: 1645+5	8166  13      			INX D
 214: 1650+5	8167  2D      			DCR L
 215: 1655+10	8168  C26581  			JNZ ClearFirstLC
 216: 1665+4	816B  AF      			XRA A
 217: 1669+10	816C  C33C81  			JMP SetCursorRow
 218:						
 219:				
 220:     -	816F  31343730	KeyMap:		DB "1", "4", "7", "0", "2", "5", "8", ML, "3", "6", "9", MR, 0x00, MU, MD, CS		
	      32353803
	      33363904
	      00050610
 221:						
 222:     -	817F  00      	LastByte:	DB	0x00



Statistics:

     4	passes
     0	jr promotions
    75	symbols
   384	bytes



Symbol Table:

acia0_data     =  11     
acia0_status   =  10     
acia1_data     =  13     
acia1_status   =  12     
advancecursor   80f8     
altmon         = 400     
bs             =   8     
clearchar       80ba     
clearfirstlc    8165     
clearfirstline  815f     
clearlastlc     8132     
clearlastline   812c     
clearscreen     80b4     
colloop         800a     
copynextchar    811f     
copyprevchar    8152     
cr             =   d     
crlf            80cd     
cs             =  10     
cursorcol      =ff82     
cursorrow      =ff83     
displaychar     8032     
getcursoraddr   80da     
heap           =ff80     
hm             =   1     
homescreen      80c4     
kbdscan         8005     
keymap          816f     
lastbyte        817f     
lf             =   a     
mask_button0   =   1     
mask_button1   =   2     
mask_button2   =   4     
mask_button3   =   8     
mask_error     =  40     
mask_intreq    =  80     
mask_ready     =   2     
mask_sw0       =   1     
mask_sw1       =   2     
mask_sw2       =   4     
mask_sw3       =   8     
mask_sw4       =  10     
mask_sw5       =  20     
mask_sw6       =  40     
mask_sw7       =  80     
mask_valid     =   1     
md             =   6     
ml             =   3     
movedown        8086     
moveleft        806f     
moveright       8067     
moveup          809f     
mr             =   4     
mu             =   5     
nextrow         80ea     
nl             =   d     
notpressed      801e     
port0          =   0     
port1          =   1     
port_col       =   7     
port_row       =   7     
rambottom      =fe00     
restoreregs     806a     
rowloop         800f     
scrolldown      8140     
scrollup        8112     
setcursor       80c7     
setcursorrow    813c     
tb             =   9     
temp_pc        =ff80     
vdpbkcolor     = dff     
vdpcols        = dfe     
vdpfgcolor     = dfe     
vdpram         = c00     
vdprows        = dff     
