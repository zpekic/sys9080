   1:				;--------------------------------------------------------------------------
   2:				; Simple test program for Sys9080 project https://github.com/zpekic/sys9080
   3:				; 		(c) zpekic@hotmail.com - 2017, 2018
   4:				;--------------------------------------------------------------------------
   5:				
   6:				include ./sys9080.asm
**** ./sys9080.asm ****
   1:				;--------------------------------------------------------------------------
   2:				; Common definitions for  Sys9080 project https://github.com/zpekic/sys9080
   3:				; 		(c) zpekic@hotmail.com - 2017, 2018
   4:				;--------------------------------------------------------------------------
   5:     -	0010          	ACIA0_STATUS	EQU 0x10; status read-only
   6:     -	0011          	ACIA0_DATA	EQU 0x11; data send/receive
   7:     -	0012          	ACIA1_STATUS	EQU 0x12; status read-only
   8:     -	0013          	ACIA1_DATA	EQU 0x13; data send/receive
   9:     -	0000          	PORT0		EQU 0x00; switches when reading, LEDs when writing
  10:     -	0001          	PORT1		EQU 0x01; buttons (3..0) when reading, LEDs when writing
  11:     -	0002          	PORT2		EQU 0x02; slider switches when reading, LEDs when writing
  12:     -	0007          	PORT_COL	EQU 0x07; hex key colums 3..0 when writing
  13:     -	0007          	PORT_ROW	EQU 0x07; hex key rows 3..0 when reading
  14:     -	0001          	MASK_VALID	EQU 0x01; fields in UART status register
  15:     -	0002          	MASK_READY	EQU 0x02;
  16:     -	0040          	MASK_ERROR	EQU 0x40;
  17:     -	0080          	MASK_INTREQ	EQU 0x80;
  18:				
  19:     -	0001          	MASK_BUTTON0	EQU 0x01;
  20:     -	0002          	MASK_BUTTON1	EQU 0x02;
  21:     -	0004          	MASK_BUTTON2	EQU 0x04;
  22:     -	0008          	MASK_BUTTON3	EQU 0x08;
  23:     -	0001          	MASK_SW0	EQU 0x01;
  24:     -	0002          	MASK_SW1	EQU 0x02;
  25:     -	0004          	MASK_SW2	EQU 0x04;
  26:     -	0008          	MASK_SW3	EQU 0x08;
  27:     -	0010          	MASK_SW4	EQU 0x10;
  28:     -	0020          	MASK_SW5	EQU 0x20;
  29:     -	0040          	MASK_SW6	EQU 0x40;
  30:     -	0080          	MASK_SW7	EQU 0x80;
  31:				
  32:				;-------------------------------------------------------------
  33:     -	0400          	AltMon		EQU 0x0400; Altmon is org'd to this location
  34:				
  35:				;-------------------------------------------------------------
  36:     -	0C00          	VdpRam		EQU 0x0C00; text video memory, 512b
  37:     -	0DFE          	VdpFgColor	EQU VdpRam + 0x1FE	;write only, RRRGGGBB
  38:     -	0DFF          	VdpBkColor	EQU VdpRam + 0x1FF	;write only, RRRGGGBB
  39:     -	0DFE          	VdpCols		EQU VdpRam + 0x1FE	;read only, should be 30
  40:     -	0DFF          	VdpRows		EQU VdpRam + 0x1FF	;read only, should be 17
  41:     -	FE00          	RamBottom	EQU 0xFE00
  42:     -	FF80          	Heap		EQU RamBottom + 0x0180
  43:     -	FF80          	Temp_PC		EQU Heap; can't use DW because the hex file maps to ROM only
  44:     -	FF82          	CursorCol	EQU Heap + 2
  45:     -	FF83          	CursorRow	EQU Heap + 3
  46:				
  47:				;Some ASCII codes with special handling during PrintCharText
  48:     -	0010          	CS 	EQU 16  ;CS: Clear Screen      
  49:     -	0001          	HM 	EQU 1   ;HM: HoMe cursor       
  50:     -	000D          	NL 	EQU 13  ;NL: New Line
  51:     -	000D          	CR 	EQU 13  ;CR: Carriage return == NL       
  52:     -	000A          	LF 	EQU 10  ;LF: Line Feed       
  53:     -	0003          	ML 	EQU  3  ;ML: Move cursor Left          
  54:     -	0004          	MR 	EQU  4  ;MR: Move cursor Right         
  55:     -	0005          	MU 	EQU  5  ;MU: Move cursor Up          
  56:     -	0006          	MD 	EQU  6  ;MD: Move cursor Down
  57:     -	0009          	TB 	EQU  9  ;TB: TaB        
  58:     -	0008          	BS 	EQU  8  ;BS: BackSpace  
  59:				
  60:				;--------------------------------------
  61:				;fpuBase	EQU 0xF0	; I/O Mapped version
  62:     -	0E00          	fpuBase		EQU 0x0E00	; Mem Mapped version
  63:				;-- write access ----------------------
  64:     -	0E00          	fpuId		EQU fpuBase + 0
  65:     -	0E02          	fpuOperation	EQU fpuBase + 2
  66:     -	0E04          	fpuOperand1Lo	EQU fpuBase + 4
  67:     -	0E06          	fpuOperand1Hi	EQU fpuBase + 6
  68:     -	0E08          	fpuOperand2Lo	EQU fpuBase + 8
  69:     -	0E0A          	fpuOperand2Hi	EQU fpuBase + 10
  70:				;-- read access -----------------------
  71:     -	0E00          	fpuDone		EQU fpuBase + 0
  72:     -	0E02          	fpuStatus	EQU fpuBase + 2
  73:     -	0E04          	fpuResultLo	EQU fpuBase + 4
  74:     -	0E06          	fpuResultHi	EQU fpuBase + 6
  75:     -	0E08          	fpuCycles	EQU fpuBase + 8
  76:				
**** test_fpu_mem2.asm ****
   7:				
   8:				
   9:				; text video memory, 512b
  10:     -	8000          			ORG 0x8000
  11:				
  12:    0+11	8000  FF      	TestFpu:	RST 7
  13:				
  14:   11+10	8001  214880  			LXI H, test_div
  15:   21+10	8004  11000E  			LXI D, fpuID
  16:   31+7	8007  0E0C    			MVI C, 12
  17:   38+17	8009  CD3D80  			CALL CopyH2D
  18:						
  19:   55+17	800C  CD3480  			Call FpuWait
  20:				
  21:   72+10	800F  21020E  			LXI H, fpuStatus
  22:   82+10	8012  115480  			LXI D, div_status
  23:   92+7	8015  0E02    			MVI C, 2
  24:   99+17	8017  CD3D80  			CALL CopyH2D
  25:  116+16	801A  2A5480  			LHLD div_status
  26:  132+11	801D  E5      			PUSH H
  27:  143+10	801E  F1      			POP PSW
  28:  153+10	801F  DA3080  			JC Error
  29:				
  30:  163+10	8022  21040E  			LXI H, fpuResultLo
  31:  173+10	8025  115680  			LXI D, div_result
  32:  183+7	8028  0E04    			MVI C, 4
  33:  190+17	802A  CD3D80  			CALL CopyH2D
  34:				
  35:				;		LXI D, test_sfsr
  36:				;		CALL WriteId
  37:				;		CALL WriteOperation
  38:				;		CALL FpuWait
  39:				;		CALL ReadStatus
  40:				;		JC Error
  41:				;		CALL ReadResult
  42:				;		CALL ReadElapsed
  43:				
  44:  207+10	802D  C33180  			JMP NoError
  45:				
  46:  217+11	8030  FF      	Error:		RST 7
  47:  228+10	8031  C30004  	NoError:	JMP AltMon
  48:				
  49:  238+16	8034  2A000E  	FpuWait:	LHLD fpuDone
  50:  254+5	8037  7D      			MOV A, L
  51:  259+4	8038  B4      			ORA H
  52:  263+5+6	8039  C0      			RNZ	
  53:  268+10	803A  C33480  			JMP FpuWait
  54:				
  55:  278+7	803D  7E      	CopyH2D		MOV A, M
  56:  285+7	803E  12      			STAX D
  57:  292+5	803F  23      			INX H
  58:  297+5	8040  13      			INX D
  59:  302+5	8041  0D      			DCR C
  60:  307+5	8042  79      			MOV A, C
  61:  312+4	8043  B1      			ORA C
  62:  316+10	8044  C23D80  			JNZ CopyH2D
  63:  326+10	8047  C9      			RET
  64:				
  65:     -	8048  BE00    	test_div:	DW format11
  66:     -	804A  8421    			DW f11Single | f11Div | dm | sm
  67:     -	804C  0000    			DW fTenLo
  68:     -	804E  2041    			DW fTenHi
  69:     -	8050  0000    			DW fMinusOneLo
  70:     -	8052  80BF    			DW fMinusOneHi
  71:     -	8054  FFFF    	div_status:	DW 0xFFFF	;-- filler
  72:     -	8056  DEAD    	div_result:	DW 0xADDE	;-- filler
  73:     -	8058  BEEF    			DW 0xEFBE	;-- filler
  74:     -	805A  FFFF    	div_cycles	DW 0xFFFF	;-- filler
  75:				
  76:     -	805C  3E00    	test_sfsr:	DW format9
  77:     -	805E  0432    			DW f9Sfsr | dm | f9DWord | f9Double
  78:     -	8060  FFFF    	fpsr_status:	DW 0xFFFF	;-- filler
  79:     -	8062  DEAD    	fpsrLo:		DW 0xADDE	;-- filler
  80:     -	8064  BEEF    	fpsrHi:		DW 0xEFBE	;-- filler
  81:     -	8066  FFFF    	fpsr_cycles:	DW 0xFFFF	;-- filler
  82:						
  83:				
  84:     -	0000          	fOneLo:		EQU 0x0000
  85:     -	3F80          	fOneHi:		EQU 0x3F80
  86:     -	0000          	fMinusOneLo:	EQU 0x0000
  87:     -	BF80          	fMinusOneHi:	EQU 0xBF80
  88:     -	0000          	fTenLo:		EQU 0x0000
  89:     -	4120          	fTenHi:		EQU 0x4120
  90:				
  91:				; -- source operands (m = supplied from the bus (from memory), rx = internal from register x)
  92:     -	0080          	sm		EQU 0x0080
  93:     -	0038          	sr7		EQU 0x0038
  94:     -	0030          	sr6		EQU 0x0030
  95:     -	0028          	sr5		EQU 0x0028
  96:     -	0020          	sr4		EQU 0x0020
  97:     -	0018          	sr3		EQU 0x0018
  98:     -	0010          	sr2		EQU 0x0010
  99:     -	0008          	sr1		EQU 0x0008
 100:     -	0000          	sr0		EQU 0x0000
 101:				; -- destination operands (m = supplied from/to the bus (from memory), rx = internal from register x)
 102:     -	0004          	dm		EQU 0x0004
 103:     -	8003          	dr7		EQU 0x8003
 104:     -	0003          	dr6		EQU 0x0003
 105:     -	8002          	dr5		EQU 0x8002
 106:     -	0002          	dr4		EQU 0x0002
 107:     -	8001          	dr3		EQU 0x8001
 108:     -	0001          	dr2		EQU 0x0001
 109:     -	8000          	dr1		EQU 0x8000
 110:     -	0000          	dr0		EQU 0x0000
 111:				
 112:				;--- format 11 constants ---
 113:     -	00BE          	format11:	EQU 0x00BE	
 114:     -	0100          	f11Single:	EQU 0x0100
 115:     -	0000          	f11Double:	EQU 0x0000
 116:     -	0000          	f11Add:		EQU 0x0000
 117:     -	1000          	f11Sub:		EQU 0x1000
 118:     -	2000          	f11Div:		EQU 0x2000
 119:     -	3000          	f11Mul:		EQU 0x3000
 120:     -	0800          	f11Cmp:		EQU 0x0800
 121:     -	2400          	f11Neg:		EQU 0x2400
 122:     -	3400          	f11Abs:		EQU 0x3400
 123:				
 124:				;--- format 19 constants ---
 125:     -	003E          	format9:	EQU 0x003E	
 126:     -	0400          	f9Single:	EQU 0x0400
 127:     -	0000          	f9Double:	EQU 0x0000
 128:     -	0000          	f9Byte:		EQU 0x0000
 129:     -	0100          	f9Word:		EQU 0x0100
 130:     -	0200          	f9DWord:	EQU 0x0200
 131:     -	0000          	f9Mov:		EQU 0x0000
 132:     -	3800          	f9Floor:	EQU 0x3800
 133:     -	2800          	f9Trunc:	EQU 0x2800
 134:     -	2000          	f9Round:	EQU 0x2000
 135:     -	1800          	f9Movfl:	EQU 0x1800
 136:     -	1000          	f9Movlf:	EQU 0x1000
 137:     -	4000          	f9Movf:		EQU 0x4000
 138:     -	0800          	f9Lfsr:		EQU 0x0800
 139:     -	3000          	f9Sfsr:		EQU 0x3000
 140:				



Statistics:

     4	passes
     0	jr promotions
   122	symbols
   104	bytes



Symbol Table:

acia0_data     =  11     
acia0_status   =  10     
acia1_data     =  13     
acia1_status   =  12     
altmon         = 400     
bs             =   8     
copyh2d         803d     
cr             =   d     
cs             =  10     
cursorcol      =ff82     
cursorrow      =ff83     
div_cycles      805a     
div_result      8056     
div_status      8054     
dm             =   4     
dr0            =   0     
dr1            =8000     
dr2            =   1     
dr3            =8001     
dr4            =   2     
dr5            =8002     
dr6            =   3     
dr7            =8003     
error           8030     
f11abs         =3400     
f11add         =   0     
f11cmp         = 800     
f11div         =2000     
f11double      =   0     
f11mul         =3000     
f11neg         =2400     
f11single      = 100     
f11sub         =1000     
f9byte         =   0     
f9double       =   0     
f9dword        = 200     
f9floor        =3800     
f9lfsr         = 800     
f9mov          =   0     
f9movf         =4000     
f9movfl        =1800     
f9movlf        =1000     
f9round        =2000     
f9sfsr         =3000     
f9single       = 400     
f9trunc        =2800     
f9word         = 100     
fminusonehi    =bf80     
fminusonelo    =   0     
fonehi         =3f80     
fonelo         =   0     
format11       =  be     
format9        =  3e     
fpsr_cycles     8066     
fpsr_status     8060     
fpsrhi          8064     
fpsrlo          8062     
fpubase        = e00     
fpucycles      = e08     
fpudone        = e00     
fpuid          = e00     
fpuoperand1hi  = e06     
fpuoperand1lo  = e04     
fpuoperand2hi  = e0a     
fpuoperand2lo  = e08     
fpuoperation   = e02     
fpuresulthi    = e06     
fpuresultlo    = e04     
fpustatus      = e02     
fpuwait         8034     
ftenhi         =4120     
ftenlo         =   0     
heap           =ff80     
hm             =   1     
lf             =   a     
mask_button0   =   1     
mask_button1   =   2     
mask_button2   =   4     
mask_button3   =   8     
mask_error     =  40     
mask_intreq    =  80     
mask_ready     =   2     
mask_sw0       =   1     
mask_sw1       =   2     
mask_sw2       =   4     
mask_sw3       =   8     
mask_sw4       =  10     
mask_sw5       =  20     
mask_sw6       =  40     
mask_sw7       =  80     
mask_valid     =   1     
md             =   6     
ml             =   3     
mr             =   4     
mu             =   5     
nl             =   d     
noerror         8031     
port0          =   0     
port1          =   1     
port2          =   2     
port_col       =   7     
port_row       =   7     
rambottom      =fe00     
sm             =  80     
sr0            =   0     
sr1            =   8     
sr2            =  10     
sr3            =  18     
sr4            =  20     
sr5            =  28     
sr6            =  30     
sr7            =  38     
tb             =   9     
temp_pc        =ff80     
test_div        8048     
test_sfsr       805c     
testfpu         8000     
vdpbkcolor     = dff     
vdpcols        = dfe     
vdpfgcolor     = dfe     
vdpram         = c00     
vdprows        = dff     
